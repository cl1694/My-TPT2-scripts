{"workspaces":{"Auto 90/90 Push":[["macro","#script_name(name) Auto 90/90 Push:{name}\n:global int status\n:global int max_attempts\n:global string dynamic_ui\n:global string display\n:const int era_mode 7\n:const int inf_mode 8\n#wide_or_tall(wide, tall) if(width.d() * 0.5625 > height.d(), {wide}, {tall})\n#ui if(lower(dynamic_ui)==\"on\",max(0.5,min(1.0,max(1024.0/width.d(),576.0/height.d()))),ui.size())\n\n#rtable \"\\\nforest---------\\\ndesert---------\\\nwinter---------\\\nunderground----\\\nvolcano--------\\\nhighmountain---\\\njungle---------\\\nmetallicruins--\\\nbeach----------\\\nocean----------\\\nneutral--------\\\ndarkrealm------\\\nheaven---------\\\nuniverse-------\\\nchaos----------\"\n#id2r(x) sub(rtbl,({x})*15,index(rtbl,\"-\",({x})*15)-({x})*15)\n\n#dtable \"\\\neasy-------\\\nmedium-----\\\nhard-------\\\ninsane-----\\\nnightmare--\\\nimpossible-\"\n#id2d(x) sub(dtbl,({x})*11,index(dtbl,\"-\",({x})*11)-({x})*11)\n\n#colN <#ffffff>\n#colE <#0faded>\n#colI <#7f7f7f>\n#conv(val) {id2r(({val})%15)},{id2d(({val})/15)}\n#col(val) if(highscore.infinity({conv({val})})>0.0,\"{colI}\",\\\nif(highscore.era({conv({val})})>0.0,\"{colE}\",\"{colN}\"))"],["main",":import macro\n:name {script_name(main)}\n:local string mode\n:local int region\n:local int difficulty\n:local string rtbl\n:local string dtbl\n\nkey.x()\nisopen(\"towertesting\")\n\nmode=\"enf\"\nmax_attempts=50\ndynamic_ui=\"on\"\nexecutesync(\"{script_name(init)}\")\nrtbl={rtable}\ndtbl={dtable}\n\nbegin:status=if(mode==\"era\",era_mode,if(mode==\"inf\",inf_mode,status+1))\n\nstart:\n#skip (status==era_mode&&highscore.era({id2r(region)},{id2d(difficulty)})>0.0)||\\\n(status==inf_mode&&highscore.infinity({id2r(region)},{id2d(difficulty)})>0.0)\n;click difficulty\nclick({wide_or_tall(\\\n  vec({ui} * 0.9 * height.d(), (1.0 - {ui} * (0.44 + 0.08 * i2d(difficulty))) * height.d() ),\\\n  vec({ui} * 0.5 * width.d(), 1.0 * height.d() - {ui} * (0.25 + 0.045 * i2d(difficulty)) * width.d())\\\n)})\nexecutesync(if({skip},\"\",\"{script_name(towertest)}\"))\n;stop\n\ndisplay = sub(display,0,274*difficulty+18*region+4) . \\\nif(highscore.infinity({id2r(region)},{id2d(difficulty)})>0.0,\"<colI>\",\\\nif(highscore.era({id2r(region)},{id2d(difficulty)})>0.0,\"{colE}\",\"{colN}\"))\\\n. sub(display,274*difficulty+18*region+13,274*(6-difficulty) - 18*region - 13)\n\nskip:\nregion=(region+1)%15\n;click arrow\nclick({wide_or_tall(\\\n  vec({ui} * 0.65 * height.d(), (1.0 - {ui} * 0.64) * height.d() ),\\\n  vec({ui} * 0.37 * width.d(), 1.0 * height.d() - {ui} * 0.36 * width.d())\\\n)})\ngotoif(start,region>0)\n\ndifficulty=(difficulty+1)%6\ngoto(if(difficulty>0,start,if(mode==\"enf\"&&status<inf_mode,begin,99)))"],["init",":import macro\n:name {script_name(init)}\n:local int p\n:local string dspl\n:local string rtbl\n:local string dtbl\n\nstatus+=1\np=(status - 1)*15\nexecute(if(status<6,\"{script_name(init)}\",\"\"))\n\nrtbl={rtable}\ndtbl={dtable}\n#show(val) {col({val})} . (({val})%15+1)%10 . \"</color>\"\n;012345678901234567\n;<#ffffff>1</color>\n\nloop:p+=3\ndspl .= {show(p - 3)} . {show(p - 2)} . {show(p - 1)}\ngotoif(loop,p%15>0)\n\ndisplay .= \"<br>\" . dspl\ngotoif(99,p>15)\n\n;select region\nclick({wide_or_tall(\\\n  vec({ui} * 0.37 * height.d(), (1.0 - {ui} * 0.4) * height.d()),\\\n  vec({ui} * 0.21 * width.d(), 1.0 * height.d() - {ui} * 0.23 * width.d())\\\n)})\n;scroll to top\nscrollbar(vec(0.5 * width.d(), 0.5 * height.d()), 0.0, 1.0)\n;select forest\nclick({wide_or_tall(\\\n  vec(0.5 * width.d() - {ui} * 0.58 * height.d(), (1.0 - {ui} * 0.29) * height.d()),\\\n  vec((0.5 - {ui} * 0.33) * width.d(), 1.0 * height.d() - {ui} * 0.16 * width.d())\\\n)})\n;select endless\nclick({wide_or_tall(\\\n  vec(0.3 * width.d() + {ui} * 0.5 * height.d(), (1.0 - {ui} * 0.25) * height.d()),\\\n  vec((0.3 + {ui} * 0.28) * width.d(), height.d() - {ui} * 0.14 * width.d())\\\n)})"],["towertest",":import macro\n:name {script_name(towertest)}\n:local int attempts\n:const double delay 1.0\n\n;click launch\nclick:click({wide_or_tall(\\\n  vec({ui} * 0.45 * height.d(), {ui} * 0.09 * height.d()),\\\n  vec({ui} * 0.25 * width.d(), {ui} * 0.05 * width.d())\\\n)})\n\nattempts=max_attempts\nwait(delay)\ngoto(if(isTowerTesting(),wait,click))\n\n#success ((status==era_mode&&era()>0.0)||(status==inf_mode&&infinity()>0.0))\n#fail (health(false)==0.0)\nretry:restart()\nattempts-=1\nwait(delay)\nwait:goto(if({fail},if(attempts>0,retry,succ),if({success},succ,wait)))\nsucc:exit()\nwait(delay)\ngotoif(succ,isTowerTesting())\nshow:show(\"towertesting\",true)\ngotoif(show,isopen(\"towertesting\")==false)"]]}}
